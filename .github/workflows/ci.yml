name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: requests_hub
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install backend dependencies
        run: |
          cd api
          pip install -r requirements.txt

      - name: Install Python tools for linting
        run: |
          pip install ruff black mypy
      - name: Lint backend
        run: |
          cd api
            ruff check . --fix
          black --check .
          mypy .
      - name: Test backend
        run: |
          cd api
          pytest
      - name: Install worker dependencies
        run: |
          cd ../worker
          pip install -r requirements.txt
      - name: Test worker
        run: |
          cd ../worker
          pytest
      - name: Install frontend dependencies
        run: |
          cd ../web
          npm ci
      - name: Lint frontend
        run: |
          cd ../web
          npm run lint
      - name: Test frontend
        run: |
          cd ../web
          npm run test
      - name: Build frontend
        run: |
          cd ../web
          npm run build
      - name: Docker build
        run: |
          docker-compose build
